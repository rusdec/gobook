/**
## Задание 3.6

Супервыборка - это способ уменьшить эффект пикселизации путём вычисления значений цвета
в нескольких точках в пределах каждого пикселя и их усреднения. ПРоще всего разделить
каждый пиксель на четыре "подпикселя". Реализуйте описанный метод

*/

package main

import (
	"image"
	"image/color"
	"image/png"
//	"fmt"
	"math/cmplx"
	"os"
)

const (
	xmin, ymin, xmax, ymax = -2, -2, +2, +2
	width, height = 1200, 1200
)

func main() {
	img := image.NewRGBA(image.Rect(0, 0, width, height))
	
	subp := [3]uint16{}  
	for py := 0; py <= height; py++ {
		y := float64(py) / height * (ymax - ymin) + ymin
		for px := 0; px <= width; px++ {
			x := float64(px) / width * (xmax - xmin) + xmin

			subp = subpixel(mandelbrot(complex(x,y)), subp)
//			subp = subpixel(mandelbrot(complex(x+1,y)), subp)
//			subp = subpixel(mandelbrot(complex(x,y+1)), subp)
			subp = subpixel(mandelbrot(complex(x+1,y+1)), subp)
			img.Set(px, py, color.YCbCr{uint8(subp[0]/2),uint8(subp[1]/2),uint8(subp[2]/2)})
			
		}
	}

	png.Encode(os.Stdout, img)
}

func subpixel(tmp, subp [3]uint16) [3]uint16 {
	//fmt.Println("subp ", subp)	
	if tmp != subp {
		for i, v := range tmp {
		//fmt.Println("subp[",i,"] = ", subp[i], " v = ", v, " Sum = ", subp[i] + v)
		subp[i] += v
		//fmt.Println("subp[",i,"] = ", subp[i])
		}
	}
	//fmt.Println("tmp  ", tmp)	
	//fmt.Println("subp ", subp)	
	//fmt.Println("")
	return subp
}

func mandelbrot(z complex128) [3]uint16 {
	const (
		iterations = 200
		contrast = 15
	)
	
	var v complex128
	var colorMax uint16 = 128

	for n := uint16(0); n < iterations; n++ {
		v = v*v + z
		if cmplx.Abs(v) > 2 {
			return [3]uint16{colorMax - contrast*n, colorMax - contrast*n, colorMax - contrast*n}
		}
	}
	
	return [3]uint16{200,40,0}
}
